name: Release

on:
  push:
    tags:
      - v*

env:
  BIN: lyre

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{steps.create.outputs.upload_url}}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Create Release
        id: create
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  macos:
    name: macOS
    runs-on: macos-latest
    needs: [create-release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: cargo build --release --target x86_64-apple-darwin
      - name: Compress
        run: tar -czvf ${{ env.BIN }}-${{ github.ref_name }}-x86_64-apple-darwin.tar.gz --directory=target/x86_64-apple-darwin/release ${{ env.BIN }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ env.BIN }}-${{ github.ref_name }}-x86_64-apple-darwin.tar.gz
          asset_name: ${{ env.BIN }}-${{ github.ref_name }}-x86_64-apple-darwin.tar.gz
          asset_content_type: application/gzip
  linux:
    name: Linux
    runs-on: ubuntu-latest
    needs: [create-release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: rustup target add x86_64-unknown-linux-musl
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-musl
      - name: Compress
        run: tar -czvf ${{ env.BIN }}-${{ github.ref_name }}-x86_64-unknown-linux-musl.tar.gz --directory=target/x86_64-unknown-linux-musl/release ${{ env.BIN }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ env.BIN }}-${{ github.ref_name }}-x86_64-unknown-linux-musl.tar.gz
          asset_name: ${{ env.BIN }}-${{ github.ref_name }}-x86_64-unknown-linux-musl.tar.gz
          asset_content_type: application/gzip
  windows:
    name: Windows
    runs-on: windows-latest
    needs: [create-release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc
      - name: Compress
        run: Compress-Archive .\target\x86_64-pc-windows-msvc\release\${{ env.BIN }}.exe ${{ env.BIN }}-${{ github.ref_name }}-x86_64-pc-windows-msvc.zip
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: .\${{ env.BIN }}-${{ github.ref_name }}-x86_64-pc-windows-msvc.zip
          asset_name: ${{ env.BIN }}-${{ github.ref_name }}-x86_64-pc-windows-msvc.zip
          asset_content_type: application/zip
